
plugins {
    id 'java'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.zenoss.example.javametrics.JavaMetricsApplication'
        )
    }
}

shadowJar {
  mergeServiceFiles()
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'io.dropwizard:dropwizard-core:1.3.9'
    compile 'com.google.guava:guava:27.1-jre'
    compile 'javax.xml.bind:jaxb-api:2.3.0'
    compile 'javax.activation:activation:1.1'

    implementation('com.readytalk:metrics3-statsd') {
        version {
            branch = 'zenoss'
        }
    }
}

group = 'com.zenoss.example.javametrics'
version = '1.0-SNAPSHOT'
description = 'JavaMetrics'
sourceCompatibility = '1.8'



// source: https://gist.github.com/matthiasbalke/3c9ecccbea1d460ee4c3fbc5843ede4a
task resolveDependencies {
    doLast {
        project.rootProject.allprojects.each { subProject ->
            subProject.buildscript.configurations.each { configuration ->
                resolveConfiguration(configuration)
            }
            subProject.configurations.each { configuration ->
                resolveConfiguration(configuration)
            }
        }
    }
}

void resolveConfiguration(configuration) {
    if (isResolveableConfiguration(configuration)) {
        configuration.resolve()
    }
}

boolean isResolveableConfiguration(configuration) {
    def nonResolveableConfigurations = ['apiElements', 'implementation',
                                        'runtimeElements', 'runtimeOnly',
                                        'testImplementation', 'testRuntimeOnly',
                                        'generatedImplementation', 'generatedRuntimeOnly']

    if (nonResolveableConfigurations.contains(configuration.getName())) {
        return false
    }
    return true
}
